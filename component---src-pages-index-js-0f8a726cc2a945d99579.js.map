{"version":3,"file":"component---src-pages-index-js-0f8a726cc2a945d99579.js","mappings":"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","sources":["webpack://hangeul-practice/./src/pages/index.js","webpack://hangeul-practice/./node_modules/google-translate-api-browser/dist/index.js","webpack://hangeul-practice/./node_modules/hangul-js/hangul.js"],"sourcesContent":["import * as React from \"react\"\nimport { useState, useEffect } from \"react\"\nimport Hangul from \"hangul-js\"\nimport { setCORS } from \"google-translate-api-browser\";\n\nimport '../styles/index.css'\n\nconst cachedWordsKey = \"all-hangeul-words\"\nasync function fetchWords() {\n  return await fetch('https://raw.githubusercontent.com/uniglot/korean-word-ipa-dictionary/main/scripts/lookup-tables/kodict_entry.txt')\n  .then( f => f.text() )\n  .then(t => t.split('\\n').slice(1))\n}\n\nfunction speakWord(word) {\n  let utterance = new SpeechSynthesisUtterance()\n  //utterance.voice = voice\n  utterance.text = word\n  utterance.lang = 'ko'\n  utterance.volume = 1\n\n  speechSynthesis.speak(utterance)\n}\n\nlet allWords = []\nconst IndexPage = () => {\n  const [isLoading, setLoading] = useState(true)\n  const [currentWord, setCurrentWord] = useState('')\n  const [currentDecompo, setDecomposition] = useState([])\n\n  const decomposeWord = (word) => {\n    let jamo = Hangul.disassemble(word)\n    setDecomposition([...new Set(jamo)])\n  }\n\n  const pickRandomWord = ()=>{\n    if (allWords.length === 0) {\n      setCurrentWord(\"\")\n      return\n    }\n    setDecomposition([])\n\n    let index = Math.trunc(Math.random() * allWords.length)\n    console.log(index)\n\n    const pickedWord = allWords[index]\n    setCurrentWord(pickedWord)\n\n    decomposeWord(pickedWord)\n  }\n\n  useEffect(() => {\n    fetchWords()\n      .then(result => {\n        setLoading(false)\n\n        allWords = result\n\n        pickRandomWord()\n      })\n      .catch(console.error)\n  }, [])\n\n  return (\n    <main>\n      { isLoading ? <p>Loading...</p> : <></>}\n\n      <div id=\"jamo-container\">\n        {\n          currentDecompo.map(j => (\n            <span key={j} className='jamo-item'>{j}</span>\n          ))\n        }\n      </div>\n\n      <h1>{currentWord}</h1>\n      \n      <button onClick={pickRandomWord}>Random</button>\n      <button onClick={()=>speakWord(currentWord)}>Play</button>\n    </main>\n  )\n}\n\nexport default IndexPage\n\nexport const Head = () => <>\n  <title>Hangeul Practice</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\"/>\n</>\n","(()=>{\"use strict\";var a={d:(e,n)=>{for(var t in n)a.o(n,t)&&!a.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},o:(a,e)=>Object.prototype.hasOwnProperty.call(a,e),r:a=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(a,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(a,\"__esModule\",{value:!0})}},e={};function n(a){for(var e=[],n=0,r=0;r<a.length;r++){var i=a.charCodeAt(r);128>i?e[n++]=i:(2048>i?e[n++]=i>>6|192:(55296==(64512&i)&&r+1<a.length&&56320==(64512&a.charCodeAt(r+1))?(i=65536+((1023&i)<<10)+(1023&a.charCodeAt(++r)),e[n++]=i>>18|240,e[n++]=i>>12&63|128):e[n++]=i>>12|224,e[n++]=i>>6&63|128),e[n++]=63&i|128)}var o=0;for(n=0;n<e.length;n++)o+=e[n],o=t(o,\"+-a^+6\");return o=t(o,\"+-3^+b+-f\"),0>(o^=0)&&(o=2147483648+(2147483647&o)),(o%=1e6).toString()+\".\"+o.toString()}a.r(e),a.d(e,{default:()=>d,generateRequestUrl:()=>o,isSupported:()=>u,normaliseResponse:()=>s,setCORS:()=>h,translate:()=>f});var t=function(a,e){for(var n=0;n<e.length-2;n+=3){var t=e.charAt(n+2);t=\"a\"<=t?t.charCodeAt(0)-87:Number(t),t=\"+\"==e.charAt(n+1)?a>>>t:a<<t,a=\"+\"==e.charAt(n)?a+t:a^t}return a},r=function(){return r=Object.assign||function(a){for(var e,n=1,t=arguments.length;n<t;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(a[r]=e[r]);return a},r.apply(this,arguments)},i={client:\"gtx\",from:\"auto\",to:\"en\",hl:\"en\",tld:\"com\"};function o(a,e){var t=r(r({},i),e),o={client:t.client,sl:t.from,tl:t.to,hl:t.hl,ie:\"UTF-8\",oe:\"UTF-8\",otf:\"1\",ssel:\"0\",tsel:\"0\",kc:\"7\",q:a,tk:n(a)},l=new URLSearchParams(o);return[\"at\",\"bd\",\"ex\",\"ld\",\"md\",\"qca\",\"rw\",\"rm\",\"ss\",\"t\"].forEach((function(a){return l.append(\"dt\",a)})),\"https://translate.google.\".concat(t.tld,\"/translate_a/single?\").concat(l)}var l={auto:\"Automatic\",af:\"Afrikaans\",sq:\"Albanian\",am:\"Amharic\",ar:\"Arabic\",hy:\"Armenian\",az:\"Azerbaijani\",eu:\"Basque\",be:\"Belarusian\",bn:\"Bengali\",bs:\"Bosnian\",bg:\"Bulgarian\",ca:\"Catalan\",ceb:\"Cebuano\",ny:\"Chichewa\",zh:\"Chinese Simplified\",\"zh-cn\":\"Chinese Simplified\",\"zh-tw\":\"Chinese Traditional\",co:\"Corsican\",hr:\"Croatian\",cs:\"Czech\",da:\"Danish\",nl:\"Dutch\",en:\"English\",eo:\"Esperanto\",et:\"Estonian\",tl:\"Filipino\",fi:\"Finnish\",fr:\"French\",fy:\"Frisian\",gl:\"Galician\",ka:\"Georgian\",de:\"German\",el:\"Greek\",gu:\"Gujarati\",ht:\"Haitian Creole\",ha:\"Hausa\",haw:\"Hawaiian\",he:\"Hebrew\",iw:\"Hebrew\",hi:\"Hindi\",hmn:\"Hmong\",hu:\"Hungarian\",is:\"Icelandic\",ig:\"Igbo\",id:\"Indonesian\",ga:\"Irish\",it:\"Italian\",ja:\"Japanese\",jw:\"Javanese\",kn:\"Kannada\",kk:\"Kazakh\",km:\"Khmer\",rw:\"Kinyarwanda\",ko:\"Korean\",ku:\"Kurdish (Kurmanji)\",ky:\"Kyrgyz\",lo:\"Lao\",la:\"Latin\",lv:\"Latvian\",lt:\"Lithuanian\",lb:\"Luxembourgish\",mk:\"Macedonian\",mg:\"Malagasy\",ms:\"Malay\",ml:\"Malayalam\",mt:\"Maltese\",mi:\"Maori\",mr:\"Marathi\",mn:\"Mongolian\",my:\"Myanmar (Burmese)\",ne:\"Nepali\",no:\"Norwegian\",or:\"Odia (Oriya)\",ps:\"Pashto\",fa:\"Persian\",pl:\"Polish\",pt:\"Portuguese\",pa:\"Punjabi\",ro:\"Romanian\",ru:\"Russian\",sm:\"Samoan\",gd:\"Scots Gaelic\",sr:\"Serbian\",st:\"Sesotho\",sn:\"Shona\",sd:\"Sindhi\",si:\"Sinhala\",sk:\"Slovak\",sl:\"Slovenian\",so:\"Somali\",es:\"Spanish\",su:\"Sundanese\",sw:\"Swahili\",sv:\"Swedish\",tg:\"Tajik\",ta:\"Tamil\",tt:\"Tatar\",te:\"Telugu\",th:\"Thai\",tr:\"Turkish\",tk:\"Turkmen\",uk:\"Ukrainian\",ur:\"Urdu\",ug:\"Uyghur\",uz:\"Uzbek\",vi:\"Vietnamese\",cy:\"Welsh\",xh:\"Xhosa\",yi:\"Yiddish\",yo:\"Yoruba\",zu:\"Zulu\"},u=function(a){return Boolean(l[a])};function s(a,e){void 0===e&&(e=!1);var n={text:\"\",pronunciation:\"\",from:{language:{didYouMean:!1,iso:\"\"},text:{autoCorrected:!1,value:\"\",didYouMean:!1}}};if(a[0].forEach((function(a){a[0]?n.text+=a[0]:a[2]&&(n.pronunciation+=a[2])})),a[2]===a[8][0][0]?n.from.language.iso=a[2]:(n.from.language.didYouMean=!0,n.from.language.iso=a[8][0][0]),a[7]&&a[7][0]){var t=a[7][0];t=(t=t.replace(/<b><i>/g,\"[\")).replace(/<\\/i><\\/b>/g,\"]\"),n.from.text.value=t,!0===a[7][5]?n.from.text.autoCorrected=!0:n.from.text.didYouMean=!0}return e&&(n.raw=a),n}var c=\"\",h=function(a){return c=a,f};function f(a,e){return void 0===e&&(e={}),n=this,t=void 0,i=function(){var n,t;return function(a,e){var n,t,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},\"function\"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(n)throw new TypeError(\"Generator is already executing.\");for(;o;)try{if(n=1,t&&(r=2&i[0]?t.return:i[0]?t.throw||((r=t.return)&&r.call(t),0):t.next)&&!(r=r.call(t,i[1])).done)return r;switch(t=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,t=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!((r=(r=o.trys).length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){o.label=i[1];break}if(6===i[0]&&o.label<r[1]){o.label=r[1],r=i;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(i);break}r[2]&&o.ops.pop(),o.trys.pop();continue}i=e.call(a,o)}catch(a){i=[6,a],t=0}finally{n=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}}(this,(function(r){switch(r.label){case 0:return n=o(a,e),[4,fetch(\"\".concat(c).concat(n))];case 1:if(!(t=r.sent()).ok)throw new Error(\"Request failed\");return[4,t.json()];case 2:return[2,s(r.sent(),e.raw)]}}))},new((r=void 0)||(r=Promise))((function(a,e){function o(a){try{u(i.next(a))}catch(a){e(a)}}function l(a){try{u(i.throw(a))}catch(a){e(a)}}function u(e){var n;e.done?a(e.value):(n=e.value,n instanceof r?n:new r((function(a){a(n)}))).then(o,l)}u((i=i.apply(n,t||[])).next())}));var n,t,r,i}const d=f;module.exports=e})();\n//# sourceMappingURL=index.js.map","/**\r\n * Hangul.js\r\n * https://github.com/e-/Hangul.js\r\n *\r\n * Copyright 2017, Jaemin Jo\r\n * under the MIT license.\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n    var CHO = [\r\n        'ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ',\r\n        'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ',\r\n        'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ',\r\n        'ㅍ', 'ㅎ'\r\n    ],\r\n        JUNG = [\r\n            'ㅏ', 'ㅐ', 'ㅑ', 'ㅒ', 'ㅓ',\r\n            'ㅔ', 'ㅕ', 'ㅖ', 'ㅗ', ['ㅗ', 'ㅏ'], ['ㅗ', 'ㅐ'],\r\n            ['ㅗ', 'ㅣ'], 'ㅛ', 'ㅜ', ['ㅜ', 'ㅓ'], ['ㅜ', 'ㅔ'], ['ㅜ', 'ㅣ'],\r\n            'ㅠ', 'ㅡ', ['ㅡ', 'ㅣ'], 'ㅣ'\r\n        ],\r\n        JONG = [\r\n            '', 'ㄱ', 'ㄲ', ['ㄱ', 'ㅅ'], 'ㄴ', ['ㄴ', 'ㅈ'], ['ㄴ', 'ㅎ'], 'ㄷ', 'ㄹ',\r\n            ['ㄹ', 'ㄱ'], ['ㄹ', 'ㅁ'], ['ㄹ', 'ㅂ'], ['ㄹ', 'ㅅ'], ['ㄹ', 'ㅌ'], ['ㄹ', 'ㅍ'], ['ㄹ', 'ㅎ'], 'ㅁ',\r\n            'ㅂ', ['ㅂ', 'ㅅ'], 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'\r\n        ],\r\n        HANGUL_OFFSET = 0xAC00,\r\n        CONSONANTS = [\r\n            'ㄱ', 'ㄲ', 'ㄳ', 'ㄴ', 'ㄵ', 'ㄶ', 'ㄷ', 'ㄸ',\r\n            'ㄹ', 'ㄺ', 'ㄻ', 'ㄼ', 'ㄽ', 'ㄾ', 'ㄿ', 'ㅀ',\r\n            'ㅁ', 'ㅂ', 'ㅃ', 'ㅄ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ',\r\n            'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'\r\n        ],\r\n        COMPLETE_CHO = [\r\n            'ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ',\r\n            'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ',\r\n            'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'\r\n        ],\r\n        COMPLETE_JUNG = [\r\n            'ㅏ', 'ㅐ', 'ㅑ', 'ㅒ', 'ㅓ',\r\n            'ㅔ', 'ㅕ', 'ㅖ', 'ㅗ', 'ㅘ', 'ㅙ',\r\n            'ㅚ', 'ㅛ', 'ㅜ', 'ㅝ', 'ㅞ', 'ㅟ',\r\n            'ㅠ', 'ㅡ', 'ㅢ', 'ㅣ'\r\n        ],\r\n        COMPLETE_JONG = [\r\n            '', 'ㄱ', 'ㄲ', 'ㄳ', 'ㄴ', 'ㄵ', 'ㄶ', 'ㄷ', 'ㄹ',\r\n            'ㄺ', 'ㄻ', 'ㄼ', 'ㄽ', 'ㄾ', 'ㄿ', 'ㅀ', 'ㅁ',\r\n            'ㅂ', 'ㅄ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'\r\n        ],\r\n        COMPLEX_CONSONANTS = [\r\n            ['ㄱ', 'ㅅ', 'ㄳ'],\r\n            ['ㄴ', 'ㅈ', 'ㄵ'],\r\n            ['ㄴ', 'ㅎ', 'ㄶ'],\r\n            ['ㄹ', 'ㄱ', 'ㄺ'],\r\n            ['ㄹ', 'ㅁ', 'ㄻ'],\r\n            ['ㄹ', 'ㅂ', 'ㄼ'],\r\n            ['ㄹ', 'ㅅ', 'ㄽ'],\r\n            ['ㄹ', 'ㅌ', 'ㄾ'],\r\n            ['ㄹ', 'ㅍ', 'ㄿ'],\r\n            ['ㄹ', 'ㅎ', 'ㅀ'],\r\n            ['ㅂ', 'ㅅ', 'ㅄ']\r\n        ],\r\n        COMPLEX_VOWELS = [\r\n            ['ㅗ', 'ㅏ', 'ㅘ'],\r\n            ['ㅗ', 'ㅐ', 'ㅙ'],\r\n            ['ㅗ', 'ㅣ', 'ㅚ'],\r\n            ['ㅜ', 'ㅓ', 'ㅝ'],\r\n            ['ㅜ', 'ㅔ', 'ㅞ'],\r\n            ['ㅜ', 'ㅣ', 'ㅟ'],\r\n            ['ㅡ', 'ㅣ', 'ㅢ']\r\n        ],\r\n        CONSONANTS_HASH,\r\n        CHO_HASH,\r\n        JUNG_HASH,\r\n        JONG_HASH,\r\n        COMPLEX_CONSONANTS_HASH,\r\n        COMPLEX_VOWELS_HASH\r\n        ;\r\n\r\n    function _makeHash(array) {\r\n        var length = array.length,\r\n            hash = { 0: 0 }\r\n            ;\r\n        for (var i = 0; i < length; i++) {\r\n            if (array[i])\r\n                hash[array[i].charCodeAt(0)] = i;\r\n        }\r\n        return hash;\r\n    }\r\n\r\n    CONSONANTS_HASH = _makeHash(CONSONANTS);\r\n    CHO_HASH = _makeHash(COMPLETE_CHO);\r\n    JUNG_HASH = _makeHash(COMPLETE_JUNG);\r\n    JONG_HASH = _makeHash(COMPLETE_JONG);\r\n\r\n    function _makeComplexHash(array) {\r\n        var length = array.length,\r\n            hash = {},\r\n            code1,\r\n            code2\r\n            ;\r\n        for (var i = 0; i < length; i++) {\r\n            code1 = array[i][0].charCodeAt(0);\r\n            code2 = array[i][1].charCodeAt(0);\r\n            if (typeof hash[code1] === 'undefined') {\r\n                hash[code1] = {};\r\n            }\r\n            hash[code1][code2] = array[i][2].charCodeAt(0);\r\n        }\r\n        return hash;\r\n    }\r\n\r\n    COMPLEX_CONSONANTS_HASH = _makeComplexHash(COMPLEX_CONSONANTS);\r\n    COMPLEX_VOWELS_HASH = _makeComplexHash(COMPLEX_VOWELS);\r\n\r\n    function _isConsonant(c) {\r\n        return typeof CONSONANTS_HASH[c] !== 'undefined';\r\n    }\r\n\r\n    function _isCho(c) {\r\n        return typeof CHO_HASH[c] !== 'undefined';\r\n    }\r\n\r\n    function _isJung(c) {\r\n        return typeof JUNG_HASH[c] !== 'undefined';\r\n    }\r\n\r\n    function _isJong(c) {\r\n        return typeof JONG_HASH[c] !== 'undefined';\r\n    }\r\n\r\n    function _isHangul(c /* code number */) {\r\n        return 0xAC00 <= c && c <= 0xd7a3;\r\n    }\r\n\r\n    function _isJungJoinable(a, b) {\r\n        return (COMPLEX_VOWELS_HASH[a] && COMPLEX_VOWELS_HASH[a][b]) ? COMPLEX_VOWELS_HASH[a][b] : false;\r\n    }\r\n\r\n    function _isJongJoinable(a, b) {\r\n        return COMPLEX_CONSONANTS_HASH[a] && COMPLEX_CONSONANTS_HASH[a][b] ? COMPLEX_CONSONANTS_HASH[a][b] : false;\r\n    }\r\n\r\n    var disassemble = function (string, grouped) {\r\n        if (string === null) {\r\n            throw new Error('Arguments cannot be null');\r\n        }\r\n\r\n        if (typeof string === 'object') {\r\n            string = string.join('');\r\n        }\r\n\r\n        var result = [],\r\n            length = string.length,\r\n            cho,\r\n            jung,\r\n            jong,\r\n            code,\r\n            r\r\n            ;\r\n\r\n        for (var i = 0; i < length; i++) {\r\n            var temp = [];\r\n\r\n            code = string.charCodeAt(i);\r\n            if (_isHangul(code)) { // 완성된 한글이면\r\n                code -= HANGUL_OFFSET;\r\n                jong = code % 28;\r\n                jung = (code - jong) / 28 % 21;\r\n                cho = parseInt((code - jong) / 28 / 21);\r\n                temp.push(CHO[cho]);\r\n                if (typeof JUNG[jung] === 'object') {\r\n                    temp = temp.concat(JUNG[jung]);\r\n                } else {\r\n                    temp.push(JUNG[jung]);\r\n                }\r\n                if (jong > 0) {\r\n                    if (typeof JONG[jong] === 'object') {\r\n                        temp = temp.concat(JONG[jong]);\r\n                    } else {\r\n                        temp.push(JONG[jong]);\r\n                    }\r\n                }\r\n            } else if (_isConsonant(code)) { //자음이면\r\n                if (_isCho(code)) {\r\n                    r = CHO[CHO_HASH[code]];\r\n                } else {\r\n                    r = JONG[JONG_HASH[code]];\r\n                }\r\n                if (typeof r === 'string') {\r\n                    temp.push(r);\r\n                } else {\r\n                    temp = temp.concat(r);\r\n                }\r\n            } else if (_isJung(code)) {\r\n                r = JUNG[JUNG_HASH[code]];\r\n                if (typeof r === 'string') {\r\n                    temp.push(r);\r\n                } else {\r\n                    temp = temp.concat(r);\r\n                }\r\n            } else {\r\n                temp.push(string.charAt(i));\r\n            }\r\n\r\n            if (grouped) result.push(temp);\r\n            else result = result.concat(temp);\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    var disassembleToString = function (str) {\r\n        if (typeof str !== 'string') {\r\n            return '';\r\n        }\r\n        str = disassemble(str);\r\n        return str.join('');\r\n    };\r\n\r\n    var assemble = function (array) {\r\n        if (typeof array === 'string') {\r\n            array = disassemble(array);\r\n        }\r\n\r\n        var result = [],\r\n            length = array.length,\r\n            code,\r\n            stage = 0,\r\n            complete_index = -1, //완성된 곳의 인덱스\r\n            previous_code,\r\n            jong_joined = false\r\n            ;\r\n\r\n        function _makeHangul(index) { // complete_index + 1부터 index까지를 greedy하게 한글로 만든다.\r\n            var code,\r\n                cho,\r\n                jung1,\r\n                jung2,\r\n                jong1 = 0,\r\n                jong2,\r\n                hangul = ''\r\n                ;\r\n\r\n            jong_joined = false;\r\n            if (complete_index + 1 > index) {\r\n                return;\r\n            }\r\n            for (var step = 1; ; step++) {\r\n                if (step === 1) {\r\n                    cho = array[complete_index + step].charCodeAt(0);\r\n                    if (_isJung(cho)) { // 첫번째 것이 모음이면 1) ㅏ같은 경우이거나 2) ㅙ같은 경우이다\r\n                        if (complete_index + step + 1 <= index && _isJung(jung1 = array[complete_index + step + 1].charCodeAt(0))) { //다음것이 있고 모음이면\r\n                            result.push(String.fromCharCode(_isJungJoinable(cho, jung1)));\r\n                            complete_index = index;\r\n                            return;\r\n                        } else {\r\n                            result.push(array[complete_index + step]);\r\n                            complete_index = index;\r\n                            return;\r\n                        }\r\n                    } else if (!_isCho(cho)) {\r\n                        result.push(array[complete_index + step]);\r\n                        complete_index = index;\r\n                        return;\r\n                    }\r\n                    hangul = array[complete_index + step];\r\n                } else if (step === 2) {\r\n                    jung1 = array[complete_index + step].charCodeAt(0);\r\n                    if (_isCho(jung1)) { //두번째 또 자음이 오면 ㄳ 에서 ㅅ같은 경우이다\r\n                        cho = _isJongJoinable(cho, jung1);\r\n                        hangul = String.fromCharCode(cho);\r\n                        result.push(hangul);\r\n                        complete_index = index;\r\n                        return;\r\n                    } else {\r\n                        hangul = String.fromCharCode((CHO_HASH[cho] * 21 + JUNG_HASH[jung1]) * 28 + HANGUL_OFFSET);\r\n                    }\r\n                } else if (step === 3) {\r\n                    jung2 = array[complete_index + step].charCodeAt(0);\r\n                    if (_isJungJoinable(jung1, jung2)) {\r\n                        jung1 = _isJungJoinable(jung1, jung2);\r\n                    } else {\r\n                        jong1 = jung2;\r\n                    }\r\n                    hangul = String.fromCharCode((CHO_HASH[cho] * 21 + JUNG_HASH[jung1]) * 28 + JONG_HASH[jong1] + HANGUL_OFFSET);\r\n                    \r\n                } else if (step === 4) {\r\n                    jong2 = array[complete_index + step].charCodeAt(0);\r\n                    if (_isJongJoinable(jong1, jong2)) {\r\n                        jong1 = _isJongJoinable(jong1, jong2);\r\n                    } else {\r\n                        jong1 = jong2;\r\n                    }\r\n                    hangul = String.fromCharCode((CHO_HASH[cho] * 21 + JUNG_HASH[jung1]) * 28 + JONG_HASH[jong1] + HANGUL_OFFSET);\r\n                } else if (step === 5) {\r\n                    jong2 = array[complete_index + step].charCodeAt(0);\r\n                    jong1 = _isJongJoinable(jong1, jong2);\r\n                    hangul = String.fromCharCode((CHO_HASH[cho] * 21 + JUNG_HASH[jung1]) * 28 + JONG_HASH[jong1] + HANGUL_OFFSET);\r\n                }\r\n\r\n                if (complete_index + step >= index) {\r\n                    result.push(hangul);\r\n                    complete_index = index;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (var i = 0; i < length; i++) {\r\n            code = array[i].charCodeAt(0);\r\n            if (!_isCho(code) && !_isJung(code) && !_isJong(code)) { //초, 중, 종성 다 아니면\r\n                _makeHangul(i - 1);\r\n                _makeHangul(i);\r\n                stage = 0;\r\n                continue;\r\n            }\r\n            //console.log(stage, array[i]);\r\n            if (stage === 0) { // 초성이 올 차례\r\n                if (_isCho(code)) { // 초성이 오면 아무 문제 없다.\r\n                    stage = 1;\r\n                } else if (_isJung(code)) {\r\n                    // 중성이오면 ㅐ 또는 ㅘ 인것이다. 바로 구분을 못한다. 따라서 특수한 stage인 stage4로 이동\r\n                    stage = 4;\r\n                }\r\n            } else if (stage == 1) { //중성이 올 차례\r\n                if (_isJung(code)) { //중성이 오면 문제없음 진행.\r\n                    stage = 2;\r\n                } else { //아니고 자음이오면 ㄻ같은 경우가 있고 ㄹㅋ같은 경우가 있다.\r\n                    if (_isJongJoinable(previous_code, code)) {\r\n                        // 합쳐질 수 있다면 ㄻ 같은 경우인데 이 뒤에 모음이 와서 ㄹ마 가 될수도 있고 초성이 올 수도 있다. 따라서 섣불리 완성할 수 없다. 이땐 stage5로 간다.\r\n                        stage = 5;\r\n                    } else { //합쳐질 수 없다면 앞 글자 완성 후 여전히 중성이 올 차례\r\n                        _makeHangul(i - 1);\r\n                    }\r\n                }\r\n            } else if (stage == 2) { //종성이 올 차례\r\n                if (_isJong(code)) { //종성이 오면 다음엔 자음 또는 모음이 온다.\r\n                    stage = 3;\r\n                } else if (_isJung(code)) { //그런데 중성이 오면 앞의 모음과 합칠 수 있는지 본다.\r\n                    if (_isJungJoinable(previous_code, code)) { //합칠 수 있으면 여전히 종성이 올 차례고 그대로 진행\r\n                    } else { // 합칠 수 없다면 오타가 생긴 경우\r\n                        _makeHangul(i - 1);\r\n                        stage = 4;\r\n                    }\r\n                } else { // 받침이 안되는 자음이 오면 ㄸ 같은 이전까지 완성하고 다시시작\r\n                    _makeHangul(i - 1);\r\n                    stage = 1;\r\n                }\r\n            } else if (stage == 3) { // 종성이 하나 온 상태.\r\n                if (_isJong(code)) { // 또 종성이면 합칠수 있는지 본다.\r\n                    if (!jong_joined && _isJongJoinable(previous_code, code)) { //합칠 수 있으면 계속 진행. 왜냐하면 이번에 온 자음이 다음 글자의 초성이 될 수도 있기 때문. 대신 이 기회는 한번만\r\n                        jong_joined = true;\r\n                    } else { //없으면 한글자 완성\r\n                        _makeHangul(i - 1);\r\n                        stage = 1; // 이 종성이 초성이 되고 중성부터 시작\r\n                    }\r\n                } else if (_isCho(code)) { // 초성이면 한글자 완성.\r\n                    _makeHangul(i - 1);\r\n                    stage = 1; //이 글자가 초성이되므로 중성부터 시작\r\n                } else if (_isJung(code)) { // 중성이면 이전 종성은 이 중성과 합쳐지고 앞 글자는 받침이 없다.\r\n                    _makeHangul(i - 2);\r\n                    stage = 2;\r\n                }\r\n            } else if (stage == 4) { // 중성이 하나 온 상태\r\n                if (_isJung(code)) { //중성이 온 경우\r\n                    if (_isJungJoinable(previous_code, code)) { //이전 중성과 합쳐질 수 있는 경우\r\n                        _makeHangul(i);\r\n                        stage = 0;\r\n                    } else { //중성이 왔지만 못합치는 경우. ㅒㅗ 같은\r\n                        _makeHangul(i - 1);\r\n                    }\r\n                } else { // 아니면 자음이 온 경우.\r\n                    _makeHangul(i - 1);\r\n                    stage = 1;\r\n                }\r\n            } else if (stage == 5) { // 초성이 연속해서 두개 온 상태 ㄺ\r\n                if (_isJung(code)) { //이번에 중성이면 ㄹ가\r\n                    _makeHangul(i - 2);\r\n                    stage = 2;\r\n                } else {\r\n                    _makeHangul(i - 1);\r\n                    stage = 1;\r\n                }\r\n            }\r\n            previous_code = code;\r\n        }\r\n        _makeHangul(i - 1);\r\n        return result.join('');\r\n    };\r\n\r\n    var search = function (a, b) {\r\n        var ad = disassemble(a).join(''),\r\n            bd = disassemble(b).join('')\r\n            ;\r\n\r\n        return ad.indexOf(bd);\r\n    };\r\n\r\n    var rangeSearch = function (haystack, needle) {\r\n        var hex = disassemble(haystack).join(''),\r\n            nex = disassemble(needle).join(''),\r\n            grouped = disassemble(haystack, true),\r\n            re = new RegExp(nex, 'gi'),\r\n            indices = [],\r\n            result;\r\n\r\n        if (!needle.length) return [];\r\n\r\n        while ((result = re.exec(hex))) {\r\n            indices.push(result.index);\r\n        }\r\n\r\n        function findStart(index) {\r\n            for (var i = 0, length = 0; i < grouped.length; ++i) {\r\n                length += grouped[i].length;\r\n                if (index < length) return i;\r\n            }\r\n        }\r\n\r\n        function findEnd(index) {\r\n            for (var i = 0, length = 0; i < grouped.length; ++i) {\r\n                length += grouped[i].length;\r\n                if (index + nex.length <= length) return i;\r\n            }\r\n        }\r\n\r\n        return indices.map(function (i) {\r\n            return [findStart(i), findEnd(i)];\r\n        });\r\n    };\r\n\r\n    function Searcher(string) {\r\n        this.string = string;\r\n        this.disassembled = disassemble(string).join('');\r\n    }\r\n\r\n    Searcher.prototype.search = function (string) {\r\n        return disassemble(string).join('').indexOf(this.disassembled);\r\n    };\r\n    var endsWithConsonant = function (string) {\r\n        if (typeof string === 'object') {\r\n            string = string.join('');\r\n        }\r\n\r\n        var code = string.charCodeAt(string.length - 1);\r\n\r\n        if (_isHangul(code)) { // 완성된 한글이면\r\n            code -= HANGUL_OFFSET;\r\n            var jong = code % 28;\r\n            if (jong > 0) {\r\n                return true;\r\n            }\r\n        } else if (_isConsonant(code)) { //자음이면\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    var endsWith = function (string, target) {\r\n        return disassemble(string).pop() === target;\r\n    };\r\n\r\n\r\n    var hangul = {\r\n        disassemble: disassemble,\r\n        d: disassemble, // alias for disassemble\r\n        disassembleToString: disassembleToString,\r\n        ds: disassembleToString, // alias for disassembleToString\r\n        assemble: assemble,\r\n        a: assemble, // alias for assemble\r\n        search: search,\r\n        rangeSearch: rangeSearch,\r\n        Searcher: Searcher,\r\n        endsWithConsonant: endsWithConsonant,\r\n        endsWith: endsWith,\r\n        isHangul: function (c) {\r\n            if (typeof c === 'string')\r\n                c = c.charCodeAt(0);\r\n            return _isHangul(c);\r\n        },\r\n        isComplete: function (c) {\r\n            if (typeof c === 'string')\r\n                c = c.charCodeAt(0);\r\n            return _isHangul(c);\r\n        },\r\n        isConsonant: function (c) {\r\n            if (typeof c === 'string')\r\n                c = c.charCodeAt(0);\r\n            return _isConsonant(c);\r\n        },\r\n        isVowel: function (c) {\r\n            if (typeof c === 'string')\r\n                c = c.charCodeAt(0);\r\n            return _isJung(c);\r\n        },\r\n        isCho: function (c) {\r\n            if (typeof c === 'string')\r\n                c = c.charCodeAt(0);\r\n            return _isCho(c);\r\n        },\r\n        isJong: function (c) {\r\n            if (typeof c === 'string')\r\n                c = c.charCodeAt(0);\r\n            return _isJong(c);\r\n        },\r\n        isHangulAll: function (str) {\r\n            if (typeof str !== 'string') return false;\r\n            for (var i = 0; i < str.length; i++) {\r\n                if (!_isHangul(str.charCodeAt(i))) return false;\r\n            }\r\n            return true;\r\n        },\r\n        isCompleteAll: function (str) {\r\n            if (typeof str !== 'string') return false;\r\n            for (var i = 0; i < str.length; i++) {\r\n                if (!_isHangul(str.charCodeAt(i))) return false;\r\n            }\r\n            return true;\r\n        },\r\n        isConsonantAll: function (str) {\r\n            if (typeof str !== 'string') return false;\r\n            for (var i = 0; i < str.length; i++) {\r\n                if (!_isConsonant(str.charCodeAt(i))) return false;\r\n            }\r\n            return true;\r\n        },\r\n        isVowelAll: function (str) {\r\n            if (typeof str !== 'string') return false;\r\n            for (var i = 0; i < str.length; i++) {\r\n                if (!_isJung(str.charCodeAt(i))) return false;\r\n            }\r\n            return true;\r\n        },\r\n        isChoAll: function (str) {\r\n            if (typeof str !== 'string') return false;\r\n            for (var i = 0; i < str.length; i++) {\r\n                if (!_isCho(str.charCodeAt(i))) return false;\r\n            }\r\n            return true;\r\n        },\r\n        isJongAll: function (str) {\r\n            if (typeof str !== 'string') return false;\r\n            for (var i = 0; i < str.length; i++) {\r\n                if (!_isJong(str.charCodeAt(i))) return false;\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n\r\n    if (typeof define == 'function' && define.amd) {\r\n        define(function () {\r\n            return hangul;\r\n        });\r\n    } else if (typeof module !== 'undefined') {\r\n        module.exports = hangul;\r\n    } else {\r\n        window.Hangul = hangul;\r\n    }\r\n})();\r\n\r\n"],"names":["allWords","isLoading","setLoading","useState","currentWord","setCurrentWord","currentDecompo","setDecomposition","pickRandomWord","length","index","Math","trunc","random","console","log","pickedWord","word","jamo","Hangul","Set","decomposeWord","useEffect","async","fetch","then","f","text","t","split","slice","fetchWords","result","catch","error","id","map","j","key","className","onClick","utterance","SpeechSynthesisUtterance","lang","volume","speechSynthesis","speak","speakWord","Head","name","content","a","d","e","n","o","Object","defineProperty","enumerable","get","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","i","charCodeAt","toString","default","generateRequestUrl","isSupported","u","normaliseResponse","s","setCORS","h","translate","charAt","Number","assign","arguments","apply","this","client","from","to","hl","tld","sl","tl","ie","oe","otf","ssel","tsel","kc","q","tk","l","URLSearchParams","forEach","append","concat","auto","af","sq","am","ar","hy","az","eu","be","bn","bs","bg","ca","ceb","ny","zh","co","hr","cs","da","nl","en","eo","et","fi","fr","fy","gl","ka","de","el","gu","ht","ha","haw","he","iw","hi","hmn","hu","is","ig","ga","it","ja","jw","kn","kk","km","rw","ko","ku","ky","lo","la","lv","lt","lb","mk","mg","ms","ml","mt","mi","mr","mn","my","ne","no","or","ps","fa","pl","pt","pa","ro","ru","sm","gd","sr","st","sn","sd","si","sk","so","es","su","sw","sv","tg","ta","tt","te","th","tr","uk","ur","ug","uz","vi","cy","xh","yi","yo","zu","Boolean","pronunciation","language","didYouMean","iso","autoCorrected","replace","raw","c","label","sent","trys","ops","next","throw","return","iterator","TypeError","done","pop","push","ok","Error","json","Promise","module","exports","CONSONANTS_HASH","CHO_HASH","JUNG_HASH","JONG_HASH","COMPLEX_CONSONANTS_HASH","COMPLEX_VOWELS_HASH","CHO","JUNG","JONG","HANGUL_OFFSET","_makeHash","array","hash","_makeComplexHash","code1","code2","_isConsonant","_isCho","_isJung","_isJong","_isHangul","_isJungJoinable","b","_isJongJoinable","disassemble","string","grouped","join","cho","jung","jong","code","temp","parseInt","disassembleToString","str","assemble","previous_code","stage","complete_index","jong_joined","_makeHangul","jung1","jung2","jong2","jong1","hangul","step","String","fromCharCode","Searcher","disassembled","search","indexOf","ds","ad","bd","rangeSearch","haystack","needle","hex","nex","re","RegExp","indices","exec","findStart","findEnd","endsWithConsonant","endsWith","target","isHangul","isComplete","isConsonant","isVowel","isCho","isJong","isHangulAll","isCompleteAll","isConsonantAll","isVowelAll","isChoAll","isJongAll"],"sourceRoot":""}